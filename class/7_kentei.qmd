---
title: "7 検定"
date: 2023/11/13
---

```{r}
#| message: false
#| warning: false
#| output: false
rm(list=ls()); gc();  gc(); #<1>
if (!require("pacman")) install.packages("pacman") #<2>
pacman::p_load(tidyverse, magrittr,estimatr,car,modelsummary,ggrepel,patchwork) #<3>

```

1.  前の作業など，rのメモリに入っているものをリセットするコマンド
2.  パッケージ管理用のパッケージである`pacman`が入っていない場合はインストール
3.  複数のパッケージを一度に呼び出す

# 統計的仮説検定の考え方

いわゆる回帰分析では，

$$
Y = \beta_0 + \beta_1 X_1 + ...+\beta_dX_d + \epsilon
$$

と言った線形構造を仮定して，OLS（最小二乗法）という方法で $\beta$の推定値$\hat \beta$を推定しました。この$\beta$ は，説明変数$X$が$Y$とどのように関わっているのかを表します。しかし，$\hat \beta$はサンプルを使って推定した推定値です。母集団のパラメータである$\beta$とは必ずしも一致するとは限りません。しかし，中心極限定理などの確率の性質を利用すると，$\hat \beta$がどの程度の誤差を持って推定されたのかがわかります。特に回帰分析では想定される誤差の中に0が入っているかが重要です。 $\beta$が0かもしれないということは，その独立変数$X$が$Y$と関係ないかもしれない，ということを意味しているからです。

::: {layout="[1,1]"}
![YとXに関係がある](images/Untitled111.png)

![YとXに関係がない](images/Untitled222.png)
:::

# 統計的仮説検定

このように，回帰係数に意味があるのか，についての検証は統計的仮説検定と言います。これは別に回帰分析に限ったものではなく，母集団から抽出されたサンプルを使ってなんらかの検証を行う際に広く使われます。

例えばコイントスの例です。歪みのない[^1]コインを投げた場合，表が出る確率は1/2です。今手元にあるコインが歪みのないものかどうかを検証するためには，「歪みがない」ことを仮説として持ちます。これを帰無仮説と言います。逆にこの仮説が否定されたもの「コインが歪んでいる」という仮説を対立仮説と言います。

これらの仮説を以下のプロセスで検討します。

1.  どれぐらいの確率なら仮説を否定するか，という基準を先に決めておく。この基準を有意水準という。
2.  母集団の確率分布について，帰無仮説を立てる
3.  母集団からサンプルを取得する
4.  母集団から抽出したサンプルが母集団から得られる確率を計算し，1で決めた有意水準と比較する。優位水準より低い確率だった場合，帰無仮説が真実ではなかったとして棄却する。有意水準より大きかった場合，仮説を受容する。

## コイン投げのシミュレーション

1.  有意水準は（経済学や経営学では）5％や10％あたりが用いられます。5％としてみます。
2.  帰無仮説を設定する。コインを投げて表になる確率を$p$ とすると，帰無仮説$H_0$は $p = \frac{1}{2}$，対立仮説$H_1$は $p \ne \frac{1}{2}$と設定。
3.  コインを100回投げる。結果が表65，裏35だとする
4.  帰無仮説が正しいとして，100回中おもてが60-40回に収まる確率を計算してみる

```{r}
p40 <- pbinom(q = 40, size = 100, prob = 0.5) # <1>
p60 <- pbinom(q = 60, size = 100, prob = 0.5) # <2>
p60-p40
```

1.  表が40回以下の確率
2.  表が60回以下の確率

この0.9539は，コインを100回投げて，60回から40回表が出る確率を表しています。95％以上の確率で60-40会表が出る，逆に65回は5％以下と解釈できます。事前に設定された有意水準5％を下回るので，帰無仮説は棄却され，対立仮説である$H_1$の$p \ne \frac{1}{2}$が採択されます。

## 回帰分析と統計的仮説検定

-   回帰分析についても同じ考え方で検定をします。
-   一般的には，説明変数が従属変数と関係ない，つまり係数$\beta = 0$ を帰無仮説として検定します。

# 平均値の検定

回帰係数の検定は，平均値の検定の拡張といえます。

特に回帰分析では，$H_0 : \mu = 0$を検定します。

## 正規分布$N(\mu,1)$の場合

母集団の分布が平均$\mu$標準偏差1と判明しているケース

1.  有意水準は，5％とします。
2.  帰無仮説$H_0 : \mu = 0$とすると対立仮説$H_1 : \mu \ne 0$となります。
3.  検定の対象の母集団から標本を抽出します。これは大きいほうが望ましいです。ここから平均値を計算します。
4.  もし帰無仮説が正しいのであれば，母集団は$N(0,1)$つまり標準正規分布であるはずです。標準正規分布に従う確率変数について，$|X|>1.96$となる確率が（有意水準である）5％であることが知られています。つまり，平均値の絶対値が1.96より小さかったら帰無仮説を採択，大きかったら帰無仮説を棄却して，対立仮説をとる，ということです。

## t検定

母集団の分布があらかじめわかっているということは基本的にはありません。しかし，母集団の分布がわからないという条件でも上のような検定が行える場合があります。

1.  有意水準は，5％とします。

2.  帰無仮説$H_0 : \mu = 0$とすると対立仮説$H_1 : \mu \ne 0$となります。

3.  検定の対象の母集団から大きさnの標本を抽出します。もし，nが十分に大きいと，中心極限定理によって，以下の$Z_n$は近似的に標準正規分布$N(0,1)$に従います。

    $$
    Z_n = \frac{\sqrt{n}(\bar{X_n} - \mu)}{\sqrt{V_n}}
    $$

    ただし，$\bar{X_n}$は標本平均，$V_n$は標本分散です。

4.  もし帰無仮説が正しいのであれば，$\mu = 0$なので，$Z_n$は

    $$
    t_n = \frac{\sqrt{n}\bar{X_n}}{\sqrt{V_n}}
    $$

    と書き換えることができて，これが標準正規分布$N(0,1)$に従います。

    標準正規分布に従う確率変数について，$|X|>1.96$となる確率が（有意水準である）5％であることが知られています。つまり，平均値の絶対値が1.96より小さかったら帰無仮説を採択，大きかったら帰無仮説を棄却して，対立仮説をとる，ということです。

上記$t_n$をt値，これを用いた検定をt検定と言います。

## p値

上のt検定ではあらかじめ5％とか有意水準を決めていました。しかし，t値に対応させる形で，tの値がある数の時，その数字で帰無仮説を棄却するには有意水準をどこまで大きくする必要があるのか，という確率を直接求めることもできます。それをp値と言います。

t検定において，t値を見るのと，p値を見るのは本質的には同義です。p値5％がt値1.96を表しています。

# 信頼区間

-   一致性が満たされていたら，サンプルサイズの増加に伴い分散が0に。
    -   ある1つの数値に収束する
-   ただし，サンプルサイズは無限大ではないので，推定値は確率変数。
-   推定値がある確率で特定の範囲に収まる，その範囲を信頼区間という。
    -   狭ければ狭いほどある一定の点に近づくので嬉しい。
-   サンプルサイズ(The size of the study population)が大きい（小さい）ほど，信頼区間は狭く（広く）。

## 信頼区間の導出

-   サンプルが母集団からの無作為抽出であるという前提のもと，標準誤差（se）を計算する
    -   ± se × 1.96 で計算する。
-   テキストの事例では，信頼区間は0.27から0.81
-   詳しくは次のページ

## 信頼区間の意味

-   母集団からのサンプリングを繰り返し行った場合，95％はこの範囲の中に入る。

-   95％真のパラメータがこの範囲の中に入っている。

-   特定の研究における95%信頼区間は，「95％の確率でestimand（母集団のパラメータ）がこの範囲の中に入る」ということを意味しているわけ**ではない**。

    -   estimandは固定された値（確率変数ではない）だから。

-   信頼区間は，頻度論的な解釈しか与えない。

    -   信頼区間の数値(95%)は，**複数の研究（もしくは仮想上の研究の繰り返し）において，未知の母集団の数値が入る頻度を表している**。

-   [三重大学奥村先生の説明](https://oku.edu.mie-u.ac.jp/~okumura/stat/tests_and_CI.html)が丁寧

# 割合の検定

# 相関の検定

```{r}
#| message: false
ice3_1 <- read_csv("data/ice3_1.csv")
cor.test(ice3_1$age, ice3_1$raiten)
ice3_1 %$%
  cor.test(age,raiten)


```

　この結果の一番下に，相関係数( `0.2665227`)が書かれています。また， `p-value = 0.256`が検定の結果算出された有意確率です。約26% \> 5% なので，有意ではないです。

## 練習問題

```{r}
#| warning: false
#| message: false
#| output	: false
#| echo: true

rm(list=ls()); gc();  gc(); # <1> 
if (!require("pacman")) install.packages("pacman") # <2>
pacman::p_load(tidyverse, magrittr, modelsummary, broom) # <3>

```

1.  前の作業など，rのメモリに入っているものをリセットするコマンド
2.  パッケージ管理用のパッケージである`pacman`が入っていない場合はインストール
3.  必要なパッケージを読み込み

### 5.1

```{r}
#| message: false
#| echo: false
#| output	: false


icecream <- read_csv("data/R_EmpiricalAnalysis_csv/chap04/icecream.csv")

```

#### 1.

```{r}
icecream %$%
  lm(icecream ~ income + u15) %>% 
  summary()
```

#### 2.

```{r}
result1 <- icecream %$%
  lm(icecream ~ income + u15)

msummary(result1,
         statistic = " [{conf.low}, {conf.high}]")
```

### 5.2

```{r}
#| message: false

tem_aug <- read_csv("data/R_EmpiricalAnalysis_csv/chap04/temperature_aug.csv")
tem_aug

```

```{r}
tem_aug %<>%
  mutate(morning = 1* (6 <= time & time <=12 ),
         afternoon = 1 * (13 <= time & time <=18 ))
tem_aug
```

```{r}
tem_aug %<>%
  mutate(date = ymd(date),
         dow = wday(date,label = TRUE),
         saturday = 1 * (dow == "Sat"))

tem_aug %<>%
  mutate(sunday = 1 * (dow == "Sun"),
         recess = 1 * ("2014-08-11"<=date &"2014-08-11"<=date ))


  
#  mutate(saturday = 1 * ((date == "2014/8/2")|
#                         (date == "2014/8/9")|
#                         (date == "2014/8/16")|
#                         (date == "2014/8/23")|
#                         (date == "2014/8/30")
#  ))


```

```{r}
reg4_1 <-tem_aug %$%
  lm(elec ~ temp + prec + sunday + recess + morning + afternoon + saturday)
summary(reg4_1)

msummary(reg4_1,
         statistic = " [{conf.low}, {conf.high}]")
```

### 5.3

```{r}

S <- 10000
box <- numeric(S)


for(i in 1:S){
  x <- rnorm(1000,0,1)
  y <- 1+5*x+rnorm(1000,0,1)
  res <- lm(y~x) %>% summary() %>% tidy()
  beta1 <- res$estimate[2]
  sigma1 <-res$std.error[2]
  box[i] <- (abs(beta1 -5) < 1.96 * sigma1)
}
mean(box)
```

[^1]: 高校数学でやりましたか？歪んだコインって見たことないですよね。
